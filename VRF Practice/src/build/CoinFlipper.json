{
  "contractName": "CoinFlipper",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStatistics",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "correctBets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalBets",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "correctPercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "betCast",
          "type": "bool"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "predicted",
          "type": "bool"
        }
      ],
      "name": "performFlip",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resetBet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBet",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "betId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "betAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "betCast",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "result",
              "type": "bool"
            }
          ],
          "internalType": "struct CoinFlipper.bet",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "testStats",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "correctBets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "correctPercent",
              "type": "uint256"
            }
          ],
          "internalType": "struct CoinFlipper.statistics",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRandomStats",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "correctBets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "correctPercent",
              "type": "uint256"
            }
          ],
          "internalType": "struct CoinFlipper.statistics",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"betId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"betCast\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"internalType\":\"struct CoinFlipper.bet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"predicted\",\"type\":\"bool\"}],\"name\":\"performFlip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"betCast\",\"type\":\"bool\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetBet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRandomStats\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"correctBets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"correctPercent\",\"type\":\"uint256\"}],\"internalType\":\"struct CoinFlipper.statistics\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStats\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"correctBets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"correctPercent\",\"type\":\"uint256\"}],\"internalType\":\"struct CoinFlipper.statistics\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStatistics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"correctBets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"correctPercent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CoinFlipper.sol\":\"CoinFlipper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CoinFlipper.sol\":{\"keccak256\":\"0xb9f87767f8b596333fcd50ed04686fd84e9be061229faf1114b2b226cf3111ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a01c836416e5ee3e3e01ecd4abf46729d41ad5490a90f6f228ba5187c655f250\",\"dweb:/ipfs/QmPeLj8otm5wF448csTiwCYnJ3Msov397g3XLxMxdpKQVi\"]},\"project:/contracts/VRFNumberGenerators.sol\":{\"keccak256\":\"0x6518cf5d2d2a47ade753796c51699cae13eaa1518fa669920c977326154cfd5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dd2c4ba2900919d41989549be40cfad2670aad2de5386d2762a37d33ca6f2ff\",\"dweb:/ipfs/QmVS8D76yG7EDvKyQh8ZUNtu3zhFMofmn6VnRgLYkqr1VC\"]},\"project:/github/smartcontractkit/chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0xfde24346196bd0ee5043e43db909a59c5482a00e20e6897bcc1f91ed0045f069\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11a02c12da3f5db502a5389096a73f12e90e5b80846701b23ac98bf79330dcf0\",\"dweb:/ipfs/QmcJZ3mUrbZap7ez8YF85y15v8oLfkHAjutB5YURYvCrcd\"]},\"project:/github/smartcontractkit/chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xee0e59c8bdccdf6c16a86d6a1067dd4691fc290db2927a96cd1355fd85da49c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e17a16b122a0e7c73cbb1fed15618c9f4658a2f4bea45e05329c76a827930ac\",\"dweb:/ipfs/QmVpEijEAK6EUEbwyV4JYco9FL2cJ9tC1zcL1atG2i5WkK\"]},\"project:/github/smartcontractkit/chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x900ba1101d304031208b275f60b961f4c187ef68470e88083f86bdf853670bac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5586093ac7dbf2f36e67c7b80c9453132232e8e7e3a8e6c35d64206127f41d1a\",\"dweb:/ipfs/QmQs91HY2DM2eYxj43pgbhtXhLhAVdUAmDjjsbFWDeTTvA\"]}},\"version\":1}",
  "bytecode": "0x6080604052611b5360405161001390610081565b61001d919061008e565b604051809103906000f080158015610039573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b039290921691909117905534801561006657600080fd5b50600080546001600160a01b031916331781556002556100a2565b6105148061091983390190565b6001600160401b0391909116815260200190565b610868806100b16000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806343146f361161005b57806343146f36146100d75780634486c806146100e157806372d1a5a3146100f4578063a02e9b71146100fc5761007d565b8063131df8c41461008257806320835e8c146100ad578063252acf15146100c2575b600080fd5b61009561009036600461065a565b61011c565b6040516100a493929190610783565b60405180910390f35b6100b561013d565b6040516100a49190610716565b6100ca6101b3565b6040516100a49190610762565b6100df610222565b005b6100df6100ef3660046106d3565b6102c0565b6100ca6103b0565b61010f61010a3660046106a4565b6103f7565b6040516100a4919061070b565b600a6020526000908152604090208054600182015460029092015490919083565b6101456105f6565b5033600090815260086020908152604091829020825160c08101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260049091015460ff8082161515608084015261010090910416151560a082015290565b6101bb610639565b60005b600a8110156101e7576101d46101f460016103f7565b50806101df816107f0565b9150506101be565b5050336000908152600a6020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915290565b6040805160c0810182523380825260006020808401828152848601838152606086018481526080870185815260a08801868152968652600890945296909320945185546001600160a01b0319166001600160a01b039091161785555160018501559051600284015592516003830155915160049091018054925160ff199093169115159190911761ff00191661010092151592909202919091179055565b6040805160c081018252338082526020808301879052600280548486018190526060850188905286151560808601819052600060a0909601869052600380546001600160a01b0319908116871780835560048d8155600595865560068d81556007805461ff001960ff19918216909817881682559a8c5260089099529a8a2080549093166001600160a01b039290921691909117825580546001830155935481860155975490880155835496909101805460ff9788161515951694909417808555925461010090819004909616151590950291909416179055815491906103a6836107f0565b9190505550505050565b6103b8610639565b60005b600a8110156101e757600581106103db576103d660006104c0565b6103e5565b6103e560016104c0565b806103ef816107f0565b9150506103bb565b600061040661023f84846102c0565b600160009054906101000a90046001600160a01b03166001600160a01b031663799ae2236040518163ffffffff1660e01b815260040160206040518083038186803b15801561045457600080fd5b505afa158015610468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048c9190610688565b9050811515811515146104a8576104a360006104c0565b6104b2565b6104b260016104c0565b6104ba610222565b92915050565b336000908152600a6020526040812060019081018054919290916104e5908490610799565b9091555050600080546001600160a01b03168152600a60205260408120600101805491610511836107f0565b9190505550801561056b57336000908152600a6020526040812080546001929061053c908490610799565b9091555050600080546001600160a01b03168152600a60205260408120805491610565836107f0565b91905055505b336000908152600a602052604090206001810154905461058c9060646107d1565b61059691906107b1565b336000908152600a60205260408082206002019290925580546001600160a01b0316815220600181015490546105cd9060646107d1565b6105d791906107b1565b600080546001600160a01b03168152600a602052604090206002015550565b6040518060c0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b60405180606001604052806000815260200160008152602001600081525090565b60006020828403121561066b578081fd5b81356001600160a01b0381168114610681578182fd5b9392505050565b600060208284031215610699578081fd5b815161068181610821565b600080604083850312156106b6578081fd5b8235915060208301356106c881610821565b809150509250929050565b6000806000606084860312156106e7578081fd5b8335925060208401359150604084013561070081610821565b809150509250925092565b901515815260200190565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015260808083015115159082015260a09182015115159181019190915260c00190565b81518152602080830151908201526040918201519181019190915260600190565b9283526020830191909152604082015260600190565b600082198211156107ac576107ac61080b565b500190565b6000826107cc57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156107eb576107eb61080b565b500290565b60006000198214156108045761080461080b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b801515811461082f57600080fd5b5056fea2646970667358221220805b7f1631fbe37cf5dbabb8a5d8d5b0bb2b5995c76d35c17c9b216b682de87964736f6c6343000800003360a060405260018054736168499c0cffcacd319c818142124b7a15e857ab6001600160a01b03199091161790557fd89b2bf150e3b9e13446986e571fb9cab24b13cea0a43ea20a6049a85cc807cc600255600380546601000000000000619c4063ffffffff199092169190911761ffff60201b19166403000000001763ffffffff60301b191617905534801561009457600080fd5b506040516105143803806105148339810160408190526100b39161011d565b6001546001600160601b0319606082901b1660805260008054600680546001600160a01b031990811633179091556001600160401b03909416600160a01b02600160a01b600160e01b0319949091166001600160a01b03909316929092179290921617905561014b565b60006020828403121561012e578081fd5b81516001600160401b0381168114610144578182fd5b9392505050565b60805160601c6103ac610168600039600060b701526103ac6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631fe543e314610051578063799ae22314610066578063e89e106a14610084578063f6eaffc814610099575b600080fd5b61006461005f36600461020d565b6100ac565b005b61006e61010b565b60405161007b91906102e1565b60405180910390f35b61008c61015f565b60405161007b9190610337565b61008c6100a73660046101f5565b610165565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100fd5760405162461bcd60e51b81526004016100f4906102ec565b60405180910390fd5b6101078282610186565b5050565b600080600242446040516020016101239291906102d3565b6040516020818303038152906040528051906020012060001c6101469190610340565b905080610156576000915061015b565b600191505b5090565b60055481565b6004818154811061017557600080fd5b600091825260209091200154905081565b805161019990600490602084019061019e565b505050565b8280548282559060005260206000209081019282156101d9579160200282015b828111156101d95782518255916020019190600101906101be565b5061015b9291505b8082111561015b57600081556001016101e1565b600060208284031215610206578081fd5b5035919050565b6000806040838503121561021f578081fd5b8235915060208084013567ffffffffffffffff8082111561023e578384fd5b818601915086601f830112610251578384fd5b81358181111561026357610263610360565b8381026040518582820101818110858211171561028257610282610360565b604052828152858101935084860182860187018b10156102a0578788fd5b8795505b838610156102c25780358552600195909501949386019386016102a4565b508096505050505050509250929050565b918252602082015260400190565b901515815260200190565b6020808252602b908201527f4f6e6c7920436f6f7264696e61746f72732063616e2063616c6c20666f72207260408201526a616e646f6d20776f72647360a81b606082015260800190565b90815260200190565b60008261035b57634e487b7160e01b81526012600452602481fd5b500690565b634e487b7160e01b600052604160045260246000fdfea26469706673582212202edee104c4abcc00193aa888ac023a6b9d743adc65cccf853c8e76d7218e58d164736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806343146f361161005b57806343146f36146100d75780634486c806146100e157806372d1a5a3146100f4578063a02e9b71146100fc5761007d565b8063131df8c41461008257806320835e8c146100ad578063252acf15146100c2575b600080fd5b61009561009036600461065a565b61011c565b6040516100a493929190610783565b60405180910390f35b6100b561013d565b6040516100a49190610716565b6100ca6101b3565b6040516100a49190610762565b6100df610222565b005b6100df6100ef3660046106d3565b6102c0565b6100ca6103b0565b61010f61010a3660046106a4565b6103f7565b6040516100a4919061070b565b600a6020526000908152604090208054600182015460029092015490919083565b6101456105f6565b5033600090815260086020908152604091829020825160c08101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260049091015460ff8082161515608084015261010090910416151560a082015290565b6101bb610639565b60005b600a8110156101e7576101d46101f460016103f7565b50806101df816107f0565b9150506101be565b5050336000908152600a6020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915290565b6040805160c0810182523380825260006020808401828152848601838152606086018481526080870185815260a08801868152968652600890945296909320945185546001600160a01b0319166001600160a01b039091161785555160018501559051600284015592516003830155915160049091018054925160ff199093169115159190911761ff00191661010092151592909202919091179055565b6040805160c081018252338082526020808301879052600280548486018190526060850188905286151560808601819052600060a0909601869052600380546001600160a01b0319908116871780835560048d8155600595865560068d81556007805461ff001960ff19918216909817881682559a8c5260089099529a8a2080549093166001600160a01b039290921691909117825580546001830155935481860155975490880155835496909101805460ff9788161515951694909417808555925461010090819004909616151590950291909416179055815491906103a6836107f0565b9190505550505050565b6103b8610639565b60005b600a8110156101e757600581106103db576103d660006104c0565b6103e5565b6103e560016104c0565b806103ef816107f0565b9150506103bb565b600061040661023f84846102c0565b600160009054906101000a90046001600160a01b03166001600160a01b031663799ae2236040518163ffffffff1660e01b815260040160206040518083038186803b15801561045457600080fd5b505afa158015610468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048c9190610688565b9050811515811515146104a8576104a360006104c0565b6104b2565b6104b260016104c0565b6104ba610222565b92915050565b336000908152600a6020526040812060019081018054919290916104e5908490610799565b9091555050600080546001600160a01b03168152600a60205260408120600101805491610511836107f0565b9190505550801561056b57336000908152600a6020526040812080546001929061053c908490610799565b9091555050600080546001600160a01b03168152600a60205260408120805491610565836107f0565b91905055505b336000908152600a602052604090206001810154905461058c9060646107d1565b61059691906107b1565b336000908152600a60205260408082206002019290925580546001600160a01b0316815220600181015490546105cd9060646107d1565b6105d791906107b1565b600080546001600160a01b03168152600a602052604090206002015550565b6040518060c0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b60405180606001604052806000815260200160008152602001600081525090565b60006020828403121561066b578081fd5b81356001600160a01b0381168114610681578182fd5b9392505050565b600060208284031215610699578081fd5b815161068181610821565b600080604083850312156106b6578081fd5b8235915060208301356106c881610821565b809150509250929050565b6000806000606084860312156106e7578081fd5b8335925060208401359150604084013561070081610821565b809150509250925092565b901515815260200190565b81516001600160a01b0316815260208083015190820152604080830151908201526060808301519082015260808083015115159082015260a09182015115159181019190915260c00190565b81518152602080830151908201526040918201519181019190915260600190565b9283526020830191909152604082015260600190565b600082198211156107ac576107ac61080b565b500190565b6000826107cc57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156107eb576107eb61080b565b500290565b60006000198214156108045761080461080b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b801515811461082f57600080fd5b5056fea2646970667358221220805b7f1631fbe37cf5dbabb8a5d8d5b0bb2b5995c76d35c17c9b216b682de87964736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:228:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "125:101:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "135:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "147:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "158:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "143:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "143:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "135:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "177:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "208:2:6",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "212:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "204:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "204:10:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "216:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "200:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "200:18:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "188:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "188:31:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "170:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "170:50:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "170:50:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_6995_by_1__to_t_uint64__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "94:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "105:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "116:4:6",
                "type": ""
              }
            ],
            "src": "14:212:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_rational_6995_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3713:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:6",
                "type": ""
              }
            ],
            "src": "14:306:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "403:179:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "449:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "458:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "466:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "451:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "451:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "451:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "424:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "433:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "420:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "420:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "416:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "416:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "413:2:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "484:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "503:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:16:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "488:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "546:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "522:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "522:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "522:30:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "571:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "380:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "392:6:6",
                "type": ""
              }
            ],
            "src": "325:257:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "671:237:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "717:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "726:6:6"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "734:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "719:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "719:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "719:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "692:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "701:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "713:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "684:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "681:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "752:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "775:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "762:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:23:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "752:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "794:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "824:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "835:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "820:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "820:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "807:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "807:32:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "798:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "872:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "848:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "848:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "848:30:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "887:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "897:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "887:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "629:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "640:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "652:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "660:6:6",
                "type": ""
              }
            ],
            "src": "587:321:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1014:288:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1060:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1069:6:6"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1077:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1062:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1062:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1062:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1035:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1044:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1031:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1031:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1056:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1027:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1024:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1095:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1118:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1105:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1105:23:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1095:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1137:42:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1164:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1175:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1160:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1160:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1147:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1147:32:6"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1137:6:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1188:45:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1218:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1229:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1214:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1214:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1201:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:32:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1192:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1266:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1242:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:30:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1281:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1291:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1281:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "964:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "975:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "987:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "995:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1003:6:6",
                "type": ""
              }
            ],
            "src": "913:389:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1402:92:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1412:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1424:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1435:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1420:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1420:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1412:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1454:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1479:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1472:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1472:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1465:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1465:22:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1447:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1447:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1447:41:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1371:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1382:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1393:4:6",
                "type": ""
              }
            ],
            "src": "1307:187:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1638:457:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1648:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1660:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1671:3:6",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1656:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1656:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1648:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1691:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1712:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "1706:5:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1706:13:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1729:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1734:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1725:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1725:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1738:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1721:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1721:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1702:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1702:39:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1684:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1684:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1684:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1762:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1773:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1758:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1758:20:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1790:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1798:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1786:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1786:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1780:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1780:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1751:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1751:54:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1751:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1825:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1836:4:6",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1821:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1821:20:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1853:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1861:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1849:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1849:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1843:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1843:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1814:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1814:54:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1814:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1888:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1899:4:6",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1884:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1884:20:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1916:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1924:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1912:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1912:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1906:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1906:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1877:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1877:54:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1877:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1951:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1962:4:6",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1947:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1947:20:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1993:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2001:4:6",
                                        "type": "",
                                        "value": "0x80"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1989:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1989:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1983:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1983:24:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1976:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1976:32:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1969:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1969:40:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1940:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1940:70:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1940:70:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2030:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2041:4:6",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2026:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2026:20:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2072:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2080:4:6",
                                        "type": "",
                                        "value": "0xa0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2068:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2068:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2062:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2062:24:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2055:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2055:32:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2048:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2048:40:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2019:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:70:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2019:70:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_bet_$40_memory_ptr__to_t_struct$_bet_$40_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1607:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1618:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1629:4:6",
                "type": ""
              }
            ],
            "src": "1499:596:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2253:209:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2263:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2275:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2286:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2271:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2271:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2263:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2305:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2322:6:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2316:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2316:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2298:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2298:32:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2298:32:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2350:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2361:4:6",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2346:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2346:20:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2378:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2386:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2374:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2374:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2368:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2368:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2339:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2339:54:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2339:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2413:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2424:4:6",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2409:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2409:20:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2441:6:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2449:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2437:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2437:17:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2431:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2431:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2402:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2402:54:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2402:54:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_statistics_$60_memory_ptr__to_t_struct$_statistics_$60_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2222:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2233:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2244:4:6",
                "type": ""
              }
            ],
            "src": "2100:362:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2624:162:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2634:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2646:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2657:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2642:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2642:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2634:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2676:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2687:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2669:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2669:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2669:25:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2714:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2725:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2710:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2710:18:6"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2730:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2703:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2703:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2703:34:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2757:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2768:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2753:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2753:18:6"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2773:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2746:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2746:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2746:34:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2577:9:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2588:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2596:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2604:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2615:4:6",
                "type": ""
              }
            ],
            "src": "2467:319:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2839:80:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2866:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2868:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2868:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2868:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2855:1:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2862:1:6"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2858:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2858:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2852:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2852:13:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2849:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2897:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2908:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2911:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2904:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2904:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2897:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2822:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2825:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2831:3:6",
                "type": ""
              }
            ],
            "src": "2791:128:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2970:171:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3001:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "3022:1:6"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3029:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3034:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3025:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3025:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3015:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3015:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3015:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3066:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3069:4:6",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3059:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3059:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3059:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "3094:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3097:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3087:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3087:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3087:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2990:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2983:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2983:9:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2980:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3121:14:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3130:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3133:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3126:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3126:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "3121:1:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2955:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2958:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "2964:1:6",
                "type": ""
              }
            ],
            "src": "2924:217:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3198:116:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3257:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3259:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3259:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3259:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3229:1:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3222:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3222:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3215:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3237:1:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3248:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3244:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3244:6:6"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3252:1:6"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3240:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3240:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3234:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3234:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3211:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3211:45:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3208:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3288:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3303:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3306:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3299:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3299:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3288:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3177:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3180:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3186:7:6",
                "type": ""
              }
            ],
            "src": "3146:168:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3366:88:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3397:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3399:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3399:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3399:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3382:5:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3393:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3389:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3389:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3379:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3379:17:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3376:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3428:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3439:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3446:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3435:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3435:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3428:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3348:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3358:3:6",
                "type": ""
              }
            ],
            "src": "3319:135:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3491:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3508:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3515:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3520:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3511:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3511:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3501:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3501:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3501:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3548:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3551:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3541:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3541:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3541:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3572:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3575:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3565:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3565:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3565:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3459:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3635:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3689:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3698:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3701:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3691:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3691:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3691:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3658:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3679:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3672:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3672:13:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3665:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3665:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3655:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3655:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3648:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3648:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3645:2:6"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3624:5:6",
                "type": ""
              }
            ],
            "src": "3591:120:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_struct$_bet_$40_memory_ptr__to_t_struct$_bet_$40_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(mload(value0), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), iszero(iszero(mload(add(value0, 0x80)))))\n        mstore(add(headStart, 0xa0), iszero(iszero(mload(add(value0, 0xa0)))))\n    }\n    function abi_encode_tuple_t_struct$_statistics_$60_memory_ptr__to_t_struct$_statistics_$60_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "251:3785:0:-:0;;;792:4;768:29;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;739:58:0;;;-1:-1:-1;;;;;;739:58:0;-1:-1:-1;;;;;739:58:0;;;;;;;;;;872:71;;;;;;;;;-1:-1:-1;897:5:0;:18;;-1:-1:-1;;;;;;897:18:0;905:10;897:18;;;926:5;:9;251:3785;;;;;;;;;;:::o;14:212:6:-;-1:-1:-1;;;;;188:31:6;;;;170:50;;158:2;143:18;;125:101::o;:::-;251:3785:0;;;;;;",
  "deployedSourceMap": "251:3785:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:52;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3468:123;;;:::i;:::-;;;;;;;:::i;3828:203::-;;;:::i;:::-;;;;;;;:::i;2666:110::-;;;:::i;:::-;;1681:276;;;;;;:::i;:::-;;:::i;3599:221::-;;;:::i;2083:458::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1542:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3468:123::-;3508:10;;:::i;:::-;-1:-1:-1;3572:10:0;3560:23;;;;:11;:23;;;;;;;;;3553:30;;;;;;;;;-1:-1:-1;;;;;3553:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3468:123;:::o;3828:203::-;3872:17;;:::i;:::-;3906:6;3902:78;3922:2;3918:1;:6;3902:78;;;3946:22;3958:3;3963:4;3946:11;:22::i;:::-;-1:-1:-1;3926:3:0;;;;:::i;:::-;;;;3902:78;;;-1:-1:-1;;4012:10:0;3997:26;;;;:14;:26;;;;;;;;;3990:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3828:203;:::o;2666:110::-;2730:38;;;;;;;;2734:10;2730:38;;;-1:-1:-1;2730:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2704:23;;;:11;:23;;;;;;;:64;;;;-1:-1:-1;;;;;;2704:64:0;-1:-1:-1;;;;;2704:64:0;;;;;;;-1:-1:-1;2704:64:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2704:64:0;;;;;;;;;;-1:-1:-1;;2704:64:0;;;;;;;;;;;;;;;2666:110::o;1681:276::-;1782:60;;;;;;;;1786:10;1782:60;;;;;;;;;;1809:5;;;1782:60;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1782:60:0;;;;;;;1769:10;:73;;-1:-1:-1;;;;;;1769:73:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1769:73:0;;;;;;;;;;1853:23;;;:11;:23;;;;;;:36;;;;;-1:-1:-1;;;;;1853:36:0;;;;;;;;;;;;1782:60;1853:36;;;;;;;;;;;;;;;;;;;;;;;1769:73;1853:36;;;;;;;;;;;;;;;;1769:73;1853:36;;;;;;;;;;;;;;;;;;;1900:7;;;1809:5;1900:7;;;:::i;:::-;;;;;;1681:276;;;:::o;3599:221::-;3637:17;;:::i;:::-;3671:6;3667:102;3687:2;3683:1;:6;3667:102;;;3715:1;3711;:5;:46;;3739:18;3751:5;3739:11;:18::i;:::-;3711:46;;;3719:17;3731:4;3719:11;:17::i;:::-;3691:3;;;;:::i;:::-;;;;3667:102;;2083:458;2154:11;2273:35;2282:3;2287:9;2298;2273:8;:35::i;:::-;2357:6;;;;;;;;;-1:-1:-1;;;;;2357:6:0;-1:-1:-1;;;;;2357:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2348:26;;2438:9;2428:19;;:6;:19;;;:60;;2470:18;2482:5;2470:11;:18::i;:::-;2428:60;;;2450:17;2462:4;2450:11;:17::i;:::-;2499:10;:8;:10::i;:::-;2083:458;;;;:::o;2858:559::-;2930:10;2915:26;;;;:14;:26;;;;;2953:1;2915:36;;;:39;;2953:1;;2915:36;;:39;;2953:1;;2915:39;:::i;:::-;;;;-1:-1:-1;;2965:21:0;2980:5;;-1:-1:-1;;;;;2980:5:0;2965:21;;:14;:21;;;;;2980:5;2965:31;:33;;;;;;:::i;:::-;;;;;;3012:9;3009:132;;;3053:10;3038:26;;;;:14;:26;;;;;:41;;3078:1;;3038:26;:41;;3078:1;;3038:41;:::i;:::-;;;;-1:-1:-1;;3094:21:0;3109:5;;-1:-1:-1;;;;;3109:5:0;3094:21;;:14;:21;;;;;:35;;;;;;:::i;:::-;;;;;;3009:132;3260:10;3245:26;;;;:14;:26;;;;;:36;;;;3196:38;;:44;;3237:3;3196:44;:::i;:::-;3195:87;;;;:::i;:::-;3166:10;3151:26;;;;:14;:26;;;;;;:41;;:131;;;;3392:5;;-1:-1:-1;;;;;3392:5:0;3377:21;;;3392:5;3377:31;;;3333:33;;:39;;3369:3;3333:39;:::i;:::-;3332:77;;;;:::i;:::-;3293:21;3308:5;;-1:-1:-1;;;;;3308:5:0;3293:21;;:14;:21;;;;;:36;;:116;-1:-1:-1;2858:559:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:306:6:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:6;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:6:o;325:257::-;;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;522:30;546:5;522:30;:::i;587:321::-;;;713:2;701:9;692:7;688:23;684:32;681:2;;;734:6;726;719:22;681:2;775:9;762:23;752:33;;835:2;824:9;820:18;807:32;848:30;872:5;848:30;:::i;:::-;897:5;887:15;;;671:237;;;;;:::o;913:389::-;;;;1056:2;1044:9;1035:7;1031:23;1027:32;1024:2;;;1077:6;1069;1062:22;1024:2;1118:9;1105:23;1095:33;;1175:2;1164:9;1160:18;1147:32;1137:42;;1229:2;1218:9;1214:18;1201:32;1242:30;1266:5;1242:30;:::i;:::-;1291:5;1281:15;;;1014:288;;;;;:::o;1307:187::-;1472:14;;1465:22;1447:41;;1435:2;1420:18;;1402:92::o;1499:596::-;1706:13;;-1:-1:-1;;;;;1702:39:6;1684:58;;1798:4;1786:17;;;1780:24;1758:20;;;1751:54;1861:4;1849:17;;;1843:24;1821:20;;;1814:54;1924:4;1912:17;;;1906:24;1884:20;;;1877:54;2001:4;1989:17;;;1983:24;1976:32;1969:40;1947:20;;;1940:70;1729:3;2068:17;;;2062:24;2055:32;2048:40;2026:20;;;2019:70;;;;1671:3;1656:19;;1638:457::o;2100:362::-;2316:13;;2298:32;;2386:4;2374:17;;;2368:24;2346:20;;;2339:54;2449:4;2437:17;;;2431:24;2409:20;;;2402:54;;;;2286:2;2271:18;;2253:209::o;2467:319::-;2669:25;;;2725:2;2710:18;;2703:34;;;;2768:2;2753:18;;2746:34;2657:2;2642:18;;2624:162::o;2791:128::-;;2862:1;2858:6;2855:1;2852:13;2849:2;;;2868:18;;:::i;:::-;-1:-1:-1;2904:9:6;;2839:80::o;2924:217::-;;2990:1;2980:2;;-1:-1:-1;;;3015:31:6;;3069:4;3066:1;3059:15;3097:4;3022:1;3087:15;2980:2;-1:-1:-1;3126:9:6;;2970:171::o;3146:168::-;;3252:1;3248;3244:6;3240:14;3237:1;3234:21;3229:1;3222:9;3215:17;3211:45;3208:2;;;3259:18;;:::i;:::-;-1:-1:-1;3299:9:6;;3198:116::o;3319:135::-;;-1:-1:-1;;3379:17:6;;3376:2;;;3399:18;;:::i;:::-;-1:-1:-1;3446:1:6;3435:13;;3366:88::o;3459:127::-;3520:10;3515:3;3511:20;3508:1;3501:31;3551:4;3548:1;3541:15;3575:4;3572:1;3565:15;3591:120;3679:5;3672:13;3665:21;3658:5;3655:32;3645:2;;3701:1;3698;3691:12;3645:2;3635:76;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\n// @dev if youre not Hopeful and know that the license id is wrong\r\n// @dev i have no clue how its supposed to work so change it, whatever\r\n\r\nimport './VRFNumberGenerators.sol';\r\n\r\ncontract CoinFlipper {\r\n    //Writing things out\r\n    //Users can place a bet on heads or tails with a certain bet amount\r\n    //when a user presses the button to flip a coin, performFlip() executes after bid is placed\r\n    //CoinFlip from VRFNumGen executes and returns bool (performFlip will return this as well)\r\n    //before returning that value, the following will be calculated:\r\n    //correctBets, totalBets, correctPercent, global stats (stored in owner)\r\n    address owner;\r\n    VRFNumberGenerators numGen = new VRFNumberGenerators(6995); //evidently off of testnet subID cant be here\r\n    uint256 betID;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        betID = 0;\r\n    }\r\n\r\n    //Stores a users current bet\r\n    struct bet {\r\n        address user;\r\n        uint256 requestId;\r\n        uint256 betId;\r\n        uint256 betAmount;\r\n        bool betCast;\r\n        bool result;\r\n    }\r\n    bet currentBet;\r\n    mapping(address => bet) currentBets;      //store bets in progress\r\n    mapping(uint256 => bet) betHistory;       //store bets once completed\r\n\r\n    //stores a users overall statistics\r\n    //owner address will store global statistics\r\n    struct statistics {\r\n        uint256 correctBets;\r\n        uint256 totalBets;\r\n        uint256 correctPercent;\r\n    }\r\n    mapping(address => statistics) public userStatistics;\r\n\r\n    //Creates a new bet, result init's to false until coinFlip is calculated\r\n    function placeBet(uint256 requestId, uint256 betAmount, bool betCast) public {\r\n        currentBet = bet(msg.sender, requestId, betID, betAmount, betCast, false);\r\n        currentBets[msg.sender] = currentBet;\r\n        betID++; //increment betID for the next unique bet\r\n    }\r\n\r\n    //After selecting a bet and pressing the flip coin button, perform the flip\r\n    //True is heads, false is tails\r\n    function performFlip(uint256 betAmount, bool predicted) public returns(bool result){\r\n        //place bet\r\n        //@dev using a temporary requestID until i know what that even is\r\n        placeBet(575, betAmount, predicted);\r\n        //perform coin flip\r\n        result = numGen.flipCoin();\r\n        //update statistics/other cleanup\r\n        result == predicted ? updateStats(true) : updateStats(false);\r\n        resetBet();\r\n        return result;\r\n    }\r\n    \r\n    //Resets user's current bet to default\r\n    //Pass this function only after post-flip transactions complete\r\n    function resetBet() public {\r\n        currentBets[msg.sender] = bet(msg.sender, 0, 0, 0, false, false);\r\n    }\r\n\r\n    //Updates both user and global stats after a performFlip transaction\r\n    function updateStats(bool betChoice) internal {\r\n        userStatistics[msg.sender].totalBets+=1;\r\n        userStatistics[owner].totalBets++;\r\n        if(betChoice) {\r\n            userStatistics[msg.sender].correctBets+=1;\r\n            userStatistics[owner].correctBets++;\r\n        }\r\n        userStatistics[msg.sender].correctPercent = (userStatistics[msg.sender].correctBets * 100) / (userStatistics[msg.sender].totalBets);\r\n        userStatistics[owner].correctPercent = (userStatistics[owner].correctBets * 100) / (userStatistics[owner].totalBets);\r\n    }\r\n\r\n    //functions for testing stuff bc lazy\r\n    function getBet() external view returns(bet memory){\r\n        //for testing\r\n        return currentBets[msg.sender];\r\n    }\r\n\r\n    function testStats() external returns(statistics memory) {\r\n        for(uint i = 0; i < 10; i++) {\r\n            i < 5 ? updateStats(true) : updateStats(false);\r\n        }\r\n        return userStatistics[msg.sender];\r\n    }\r\n\r\n    function testRandomStats() external returns(statistics memory) {\r\n        for(uint i = 0; i < 10; i++) {\r\n            performFlip(500, true);\r\n        }\r\n        return userStatistics[msg.sender];\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\andre\\solidity projects\\vrf practice\\contracts\\CoinFlipper.sol",
  "ast": {
    "absolutePath": "project:/contracts/CoinFlipper.sol",
    "exportedSymbols": {
      "CoinFlipper": [
        309
      ],
      "LinkTokenInterface": [
        624
      ],
      "VRFConsumerBaseV2": [
        529
      ],
      "VRFCoordinatorV2Interface": [
        720
      ],
      "VRFNumberGenerators": [
        479
      ]
    },
    "id": 310,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:31:0"
      },
      {
        "absolutePath": "project:/contracts/VRFNumberGenerators.sol",
        "file": "./VRFNumberGenerators.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 310,
        "sourceUnit": 480,
        "src": "212:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          479
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 309,
        "linearizedBaseContracts": [
          309
        ],
        "name": "CoinFlipper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "719:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "719:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "numGen",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "739:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VRFNumberGenerators_$479",
              "typeString": "contract VRFNumberGenerators"
            },
            "typeName": {
              "id": 6,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5,
                "name": "VRFNumberGenerators",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 479,
                "src": "739:19:0"
              },
              "referencedDeclaration": 479,
              "src": "739:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFNumberGenerators_$479",
                "typeString": "contract VRFNumberGenerators"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "36393935",
                  "id": 10,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "792:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6995_by_1",
                    "typeString": "int_const 6995"
                  },
                  "value": "6995"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_6995_by_1",
                    "typeString": "int_const 6995"
                  }
                ],
                "id": 9,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "768:23:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$_t_uint64_$returns$_t_contract$_VRFNumberGenerators_$479_$",
                  "typeString": "function (uint64) returns (contract VRFNumberGenerators)"
                },
                "typeName": {
                  "id": 8,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 7,
                    "name": "VRFNumberGenerators",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 479,
                    "src": "772:19:0"
                  },
                  "referencedDeclaration": 479,
                  "src": "772:19:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VRFNumberGenerators_$479",
                    "typeString": "contract VRFNumberGenerators"
                  }
                }
              },
              "id": 11,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "768:29:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFNumberGenerators_$479",
                "typeString": "contract VRFNumberGenerators"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "betID",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "850:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "850:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "886:57:0",
              "statements": [
                {
                  "expression": {
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "897:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 18,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "905:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "905:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "897:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "897:18:0"
                },
                {
                  "expression": {
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22,
                      "name": "betID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "926:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "934:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "926:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "926:9:0"
                }
              ]
            },
            "id": 27,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "883:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:0:0"
            },
            "scope": 309,
            "src": "872:71:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "CoinFlipper.bet",
            "id": 40,
            "members": [
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "user",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1007:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 28,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1007:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "requestId",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1030:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1030:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "betId",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1058:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1058:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "betAmount",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1082:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 34,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1082:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "betCast",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1110:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 36,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1110:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "result",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1133:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 38,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1133:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "bet",
            "nodeType": "StructDefinition",
            "scope": 309,
            "src": "985:167:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "currentBet",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "1158:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_bet_$40_storage",
              "typeString": "struct CoinFlipper.bet"
            },
            "typeName": {
              "id": 42,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41,
                "name": "bet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40,
                "src": "1158:3:0"
              },
              "referencedDeclaration": 40,
              "src": "1158:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_bet_$40_storage_ptr",
                "typeString": "struct CoinFlipper.bet"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "currentBets",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "1179:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_bet_$40_storage_$",
              "typeString": "mapping(address => struct CoinFlipper.bet)"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 44,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1187:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1179:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_bet_$40_storage_$",
                "typeString": "mapping(address => struct CoinFlipper.bet)"
              },
              "valueType": {
                "id": 46,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 45,
                  "name": "bet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "1198:3:0"
                },
                "referencedDeclaration": 40,
                "src": "1198:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_bet_$40_storage_ptr",
                  "typeString": "struct CoinFlipper.bet"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "betHistory",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "1251:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bet_$40_storage_$",
              "typeString": "mapping(uint256 => struct CoinFlipper.bet)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 49,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1259:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1251:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bet_$40_storage_$",
                "typeString": "mapping(uint256 => struct CoinFlipper.bet)"
              },
              "valueType": {
                "id": 51,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50,
                  "name": "bet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "1270:3:0"
                },
                "referencedDeclaration": 40,
                "src": "1270:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_bet_$40_storage_ptr",
                  "typeString": "struct CoinFlipper.bet"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CoinFlipper.statistics",
            "id": 60,
            "members": [
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "correctBets",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "1448:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1448:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "totalBets",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "1478:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 56,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1478:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "correctPercent",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "1506:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 58,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1506:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "statistics",
            "nodeType": "StructDefinition",
            "scope": 309,
            "src": "1419:117:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "131df8c4",
            "id": 65,
            "mutability": "mutable",
            "name": "userStatistics",
            "nodeType": "VariableDeclaration",
            "scope": 309,
            "src": "1542:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
              "typeString": "mapping(address => struct CoinFlipper.statistics)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 61,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1550:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1542:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                "typeString": "mapping(address => struct CoinFlipper.statistics)"
              },
              "valueType": {
                "id": 63,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 62,
                  "name": "statistics",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 60,
                  "src": "1561:10:0"
                },
                "referencedDeclaration": 60,
                "src": "1561:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_statistics_$60_storage_ptr",
                  "typeString": "struct CoinFlipper.statistics"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1758:199:0",
              "statements": [
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74,
                      "name": "currentBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1769:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_bet_$40_storage",
                        "typeString": "struct CoinFlipper.bet storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 76,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1786:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1786:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 78,
                          "name": "requestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1798:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 79,
                          "name": "betID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1809:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 80,
                          "name": "betAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "1816:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 81,
                          "name": "betCast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1827:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1836:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 75,
                        "name": "bet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "1782:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_bet_$40_storage_ptr_$",
                          "typeString": "type(struct CoinFlipper.bet storage pointer)"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1782:60:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_bet_$40_memory_ptr",
                        "typeString": "struct CoinFlipper.bet memory"
                      }
                    },
                    "src": "1769:73:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_bet_$40_storage",
                      "typeString": "struct CoinFlipper.bet storage ref"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:73:0"
                },
                {
                  "expression": {
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 86,
                        "name": "currentBets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1853:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_bet_$40_storage_$",
                          "typeString": "mapping(address => struct CoinFlipper.bet storage ref)"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "expression": {
                          "id": 87,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1865:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1865:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1853:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_bet_$40_storage",
                        "typeString": "struct CoinFlipper.bet storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 90,
                      "name": "currentBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "1879:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_bet_$40_storage",
                        "typeString": "struct CoinFlipper.bet storage ref"
                      }
                    },
                    "src": "1853:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_bet_$40_storage",
                      "typeString": "struct CoinFlipper.bet storage ref"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:36:0"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1900:7:0",
                    "subExpression": {
                      "id": 93,
                      "name": "betID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1900:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:7:0"
                }
              ]
            },
            "functionSelector": "4486c806",
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1699:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "betAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1718:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "betCast",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1737:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1737:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1698:52:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1758:0:0"
            },
            "scope": 309,
            "src": "1681:276:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "2166:375:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "353735",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2282:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_575_by_1",
                          "typeString": "int_const 575"
                        },
                        "value": "575"
                      },
                      {
                        "id": 108,
                        "name": "betAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "2287:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 109,
                        "name": "predicted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "2298:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_575_by_1",
                          "typeString": "int_const 575"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 106,
                      "name": "placeBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "2273:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,bool)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2273:35:0"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2348:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 113,
                          "name": "numGen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "2357:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VRFNumberGenerators_$479",
                            "typeString": "contract VRFNumberGenerators"
                          }
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "flipCoin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 467,
                        "src": "2357:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                          "typeString": "function () view external returns (bool)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2357:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2348:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2348:26:0"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 118,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "2428:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 119,
                        "name": "predicted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "2438:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2428:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "66616c7365",
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2482:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 124,
                        "name": "updateStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2470:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                          "typeString": "function (bool)"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2470:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2428:60:0",
                    "trueExpression": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2462:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 121,
                        "name": "updateStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2450:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                          "typeString": "function (bool)"
                        }
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2450:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:60:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 129,
                      "name": "resetBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2499:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2499:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:10:0"
                },
                {
                  "expression": {
                    "id": 132,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104,
                    "src": "2527:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 133,
                  "nodeType": "Return",
                  "src": "2520:13:0"
                }
              ]
            },
            "functionSelector": "a02e9b71",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performFlip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "betAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2104:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "predicted",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2123:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2103:35:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2154:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2154:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2153:13:0"
            },
            "scope": 309,
            "src": "2083:458:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "2693:83:0",
              "statements": [
                {
                  "expression": {
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 138,
                        "name": "currentBets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2704:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_bet_$40_storage_$",
                          "typeString": "mapping(address => struct CoinFlipper.bet storage ref)"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "expression": {
                          "id": 139,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2716:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2716:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2704:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_bet_$40_storage",
                        "typeString": "struct CoinFlipper.bet storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 143,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2734:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2734:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2746:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2749:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2752:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2755:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2762:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 142,
                        "name": "bet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2730:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_bet_$40_storage_ptr_$",
                          "typeString": "type(struct CoinFlipper.bet storage pointer)"
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2730:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_bet_$40_memory_ptr",
                        "typeString": "struct CoinFlipper.bet memory"
                      }
                    },
                    "src": "2704:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_bet_$40_storage",
                      "typeString": "struct CoinFlipper.bet storage ref"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:64:0"
                }
              ]
            },
            "functionSelector": "43146f36",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2683:2:0"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2693:0:0"
            },
            "scope": 309,
            "src": "2666:110:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "2904:513:0",
              "statements": [
                {
                  "expression": {
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 159,
                          "name": "userStatistics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "2915:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                            "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                          }
                        },
                        "id": 162,
                        "indexExpression": {
                          "expression": {
                            "id": 160,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2930:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2930:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2915:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_statistics_$60_storage",
                          "typeString": "struct CoinFlipper.statistics storage ref"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalBets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "2915:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2953:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2915:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "2915:39:0"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2965:33:0",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 167,
                          "name": "userStatistics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "2965:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                            "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                          }
                        },
                        "id": 169,
                        "indexExpression": {
                          "id": 168,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "2980:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2965:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_statistics_$60_storage",
                          "typeString": "struct CoinFlipper.statistics storage ref"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalBets",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "2965:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "2965:33:0"
                },
                {
                  "condition": {
                    "id": 173,
                    "name": "betChoice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 156,
                    "src": "3012:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 189,
                  "nodeType": "IfStatement",
                  "src": "3009:132:0",
                  "trueBody": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "3023:118:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 174,
                                "name": "userStatistics",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "3038:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                                  "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                                }
                              },
                              "id": 177,
                              "indexExpression": {
                                "expression": {
                                  "id": 175,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3053:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3053:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3038:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_statistics_$60_storage",
                                "typeString": "struct CoinFlipper.statistics storage ref"
                              }
                            },
                            "id": 178,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "correctBets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "3038:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3078:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3038:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 181,
                        "nodeType": "ExpressionStatement",
                        "src": "3038:41:0"
                      },
                      {
                        "expression": {
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3094:35:0",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 182,
                                "name": "userStatistics",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "3094:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                                  "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                                }
                              },
                              "id": 184,
                              "indexExpression": {
                                "id": 183,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4,
                                "src": "3109:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3094:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_statistics_$60_storage",
                                "typeString": "struct CoinFlipper.statistics storage ref"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "correctBets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "3094:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "3094:35:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 190,
                          "name": "userStatistics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "3151:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                            "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                          }
                        },
                        "id": 193,
                        "indexExpression": {
                          "expression": {
                            "id": 191,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3166:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3166:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3151:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_statistics_$60_storage",
                          "typeString": "struct CoinFlipper.statistics storage ref"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "correctPercent",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59,
                      "src": "3151:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 195,
                                  "name": "userStatistics",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "3196:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                                    "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                                  }
                                },
                                "id": 198,
                                "indexExpression": {
                                  "expression": {
                                    "id": 196,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3211:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3211:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3196:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_statistics_$60_storage",
                                  "typeString": "struct CoinFlipper.statistics storage ref"
                                }
                              },
                              "id": 199,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "correctBets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55,
                              "src": "3196:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3237:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "3196:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 202,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3195:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 203,
                                "name": "userStatistics",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "3245:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                                  "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                                }
                              },
                              "id": 206,
                              "indexExpression": {
                                "expression": {
                                  "id": 204,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3260:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3260:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3245:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_statistics_$60_storage",
                                "typeString": "struct CoinFlipper.statistics storage ref"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalBets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "3245:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 208,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3244:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3195:87:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3151:131:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "3151:131:0"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 212,
                          "name": "userStatistics",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "3293:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                            "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                          }
                        },
                        "id": 214,
                        "indexExpression": {
                          "id": 213,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "3308:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3293:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_statistics_$60_storage",
                          "typeString": "struct CoinFlipper.statistics storage ref"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "correctPercent",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59,
                      "src": "3293:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 216,
                                  "name": "userStatistics",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "3333:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                                    "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                                  }
                                },
                                "id": 218,
                                "indexExpression": {
                                  "id": 217,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4,
                                  "src": "3348:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3333:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_statistics_$60_storage",
                                  "typeString": "struct CoinFlipper.statistics storage ref"
                                }
                              },
                              "id": 219,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "correctBets",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55,
                              "src": "3333:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3369:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "3333:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 222,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3332:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 223,
                                "name": "userStatistics",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "3377:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                                  "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                                }
                              },
                              "id": 225,
                              "indexExpression": {
                                "id": 224,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4,
                                "src": "3392:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3377:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_statistics_$60_storage",
                                "typeString": "struct CoinFlipper.statistics storage ref"
                              }
                            },
                            "id": 226,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalBets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "3377:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 227,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3376:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3332:77:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3293:116:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "3293:116:0"
                }
              ]
            },
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateStats",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "betChoice",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "2879:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2879:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2878:16:0"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2904:0:0"
            },
            "scope": 309,
            "src": "2858:559:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "3519:72:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 238,
                      "name": "currentBets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3560:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_bet_$40_storage_$",
                        "typeString": "mapping(address => struct CoinFlipper.bet storage ref)"
                      }
                    },
                    "id": 241,
                    "indexExpression": {
                      "expression": {
                        "id": 239,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3572:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3572:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3560:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_bet_$40_storage",
                      "typeString": "struct CoinFlipper.bet storage ref"
                    }
                  },
                  "functionReturnParameters": 237,
                  "id": 242,
                  "nodeType": "Return",
                  "src": "3553:30:0"
                }
              ]
            },
            "functionSelector": "20835e8c",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3483:2:0"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "3508:10:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_bet_$40_memory_ptr",
                    "typeString": "struct CoinFlipper.bet"
                  },
                  "typeName": {
                    "id": 235,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 234,
                      "name": "bet",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40,
                      "src": "3508:3:0"
                    },
                    "referencedDeclaration": 40,
                    "src": "3508:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_bet_$40_storage_ptr",
                      "typeString": "struct CoinFlipper.bet"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3507:12:0"
            },
            "scope": 309,
            "src": "3468:123:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "3656:164:0",
              "statements": [
                {
                  "body": {
                    "id": 271,
                    "nodeType": "Block",
                    "src": "3696:73:0",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 260,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 251,
                              "src": "3711:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3715:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "3711:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "hexValue": "66616c7365",
                                "id": 267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3751:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 266,
                              "name": "updateStats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "3739:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                                "typeString": "function (bool)"
                              }
                            },
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3739:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3711:46:0",
                          "trueExpression": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3731:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 263,
                              "name": "updateStats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "3719:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                                "typeString": "function (bool)"
                              }
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3719:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 270,
                        "nodeType": "ExpressionStatement",
                        "src": "3711:46:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 254,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "3683:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3687:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "3683:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 272,
                  "initializationExpression": {
                    "assignments": [
                      251
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "3671:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3671:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 253,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3680:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3671:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3691:3:0",
                      "subExpression": {
                        "id": 257,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "3691:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 259,
                    "nodeType": "ExpressionStatement",
                    "src": "3691:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3667:102:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 273,
                      "name": "userStatistics",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "3786:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                        "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                      }
                    },
                    "id": 276,
                    "indexExpression": {
                      "expression": {
                        "id": 274,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3801:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3801:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3786:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_statistics_$60_storage",
                      "typeString": "struct CoinFlipper.statistics storage ref"
                    }
                  },
                  "functionReturnParameters": 249,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "3779:33:0"
                }
              ]
            },
            "functionSelector": "72d1a5a3",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStats",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3617:2:0"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "3637:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_statistics_$60_memory_ptr",
                    "typeString": "struct CoinFlipper.statistics"
                  },
                  "typeName": {
                    "id": 247,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 246,
                      "name": "statistics",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60,
                      "src": "3637:10:0"
                    },
                    "referencedDeclaration": 60,
                    "src": "3637:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_statistics_$60_storage_ptr",
                      "typeString": "struct CoinFlipper.statistics"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3636:19:0"
            },
            "scope": 309,
            "src": "3599:221:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "3891:140:0",
              "statements": [
                {
                  "body": {
                    "id": 300,
                    "nodeType": "Block",
                    "src": "3931:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "353030",
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3958:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              },
                              "value": "500"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3963:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 295,
                            "name": "performFlip",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "3946:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$",
                              "typeString": "function (uint256,bool) returns (bool)"
                            }
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3946:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 299,
                        "nodeType": "ExpressionStatement",
                        "src": "3946:22:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 289,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "3918:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3922:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "3918:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 301,
                  "initializationExpression": {
                    "assignments": [
                      286
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 301,
                        "src": "3906:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3906:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 288,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3915:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3906:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3926:3:0",
                      "subExpression": {
                        "id": 292,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3926:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 294,
                    "nodeType": "ExpressionStatement",
                    "src": "3926:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3902:78:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 302,
                      "name": "userStatistics",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "3997:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_statistics_$60_storage_$",
                        "typeString": "mapping(address => struct CoinFlipper.statistics storage ref)"
                      }
                    },
                    "id": 305,
                    "indexExpression": {
                      "expression": {
                        "id": 303,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4012:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4012:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3997:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_statistics_$60_storage",
                      "typeString": "struct CoinFlipper.statistics storage ref"
                    }
                  },
                  "functionReturnParameters": 284,
                  "id": 306,
                  "nodeType": "Return",
                  "src": "3990:33:0"
                }
              ]
            },
            "functionSelector": "252acf15",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRandomStats",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3852:2:0"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "3872:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_statistics_$60_memory_ptr",
                    "typeString": "struct CoinFlipper.statistics"
                  },
                  "typeName": {
                    "id": 282,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 281,
                      "name": "statistics",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60,
                      "src": "3872:10:0"
                    },
                    "referencedDeclaration": 60,
                    "src": "3872:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_statistics_$60_storage_ptr",
                      "typeString": "struct CoinFlipper.statistics"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3871:19:0"
            },
            "scope": 309,
            "src": "3828:203:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 310,
        "src": "251:3785:0"
      }
    ],
    "src": "35:4001:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x73369f191c5213aF15fdd172508e4e6B73D37f22",
      "transactionHash": "0x885afc10b58e209536331d19b61dcc98c1e5f631a20d8fb0677295ac998b6626"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xEE6107c802C20334DE56549fB3159d6252d947D0",
      "transactionHash": "0xeb200b00c4419599afb4b9dd5f61833ba950dd6360ba52d29eef3392c04c4ba1"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-26T17:15:22.410Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}